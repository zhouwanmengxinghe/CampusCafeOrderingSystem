@model CampusCafeOrderingSystem.Models.CateringApplicationViewModel
@using CampusCafeOrderingSystem.Models
@{
    ViewData["Title"] = "Group Catering Application";
}

<div class="container my-4">
    <h2 class="mb-3 text-center">Group Catering Application</h2>
    <p class="text-muted text-center mb-4">
        Fill out the form and submit your catering application. We will contact you within <strong>1-2 business days</strong> to confirm details.<br />
        Fill out the form and we'll get back to you within 1-2 business days.
    </p>

    <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

    <div class="row g-4">
        <div class="col-12 col-lg-8">
            <div class="card shadow-sm">
                <div class="card-body">
                    <form asp-action="Apply" asp-controller="Catering" method="post" novalidate>
                        @Html.AntiForgeryToken()

                        <h5 class="mb-3">Contact Details</h5>
                        <div class="row g-3">
                            <div class="col-md-6">
                                <label asp-for="ContactName" class="form-label"></label>
                                <input asp-for="ContactName" class="form-control" placeholder="e.g., Alice Wang" />
                                <span asp-validation-for="ContactName" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="ContactPhone" class="form-label"></label>
                                <input asp-for="ContactPhone" class="form-control" type="tel" placeholder="+64 21 123 4567" />
                                <span asp-validation-for="ContactPhone" class="text-danger"></span>
                            </div>
                        </div>

                        <hr class="my-4" />

                        <h5 class="mb-3">Event Details</h5>
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label asp-for="EventDate" class="form-label"></label>
                                <input asp-for="EventDate" type="date" class="form-control" lang="en" placeholder="2001/01/01" value="2001-01-01" />
                                <span asp-validation-for="EventDate" class="text-danger"></span>
                            </div>
                            <div class="col-md-4">
                                <label asp-for="StartTime" class="form-label">Start Time</label>
                                <input asp-for="StartTime" type="time" class="form-control" lang="en" placeholder="HH:MM" />
                                <span asp-validation-for="StartTime" class="text-danger"></span>
                            </div>
                            <div class="col-md-4">
                                <label asp-for="EndTime" class="form-label">End Time</label>
                                <input asp-for="EndTime" type="time" class="form-control" lang="en" placeholder="HH:MM" />
                                <span asp-validation-for="EndTime" class="text-danger"></span>
                            </div>

                            <div class="col-md-12">
                                <label asp-for="NumberOfPeople" class="form-label">Number of People</label>
                                <div class="d-flex align-items-center gap-2">
                                    <input id="peopleRange" type="range" min="1" max="500" value="@Model.NumberOfPeople" class="form-range" />
                                    <input asp-for="NumberOfPeople" type="number" class="form-control" style="max-width:120px;" min="1" max="500" />
                                </div>
                                <span asp-validation-for="NumberOfPeople" class="text-danger"></span>
                                <div class="form-text">Use slider or enter a number (1ï¿½C500).</div>
                            </div>

                            <div class="col-md-12">
                                <label class="form-label">Service Type</label>
                                <div class="d-flex flex-wrap gap-3">
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" asp-for="ServiceType" id="st1" value="Delivery" />
                                        <label class="form-check-label" for="st1">Delivery</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" asp-for="ServiceType" id="st2" value="Pickup" />
                                        <label class="form-check-label" for="st2">Pickup</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="radio" asp-for="ServiceType" id="st3" value="OnSiteService" />
                                        <label class="form-check-label" for="st3">On-site Service</label>
                                    </div>
                                </div>
                                <span asp-validation-for="ServiceType" class="text-danger"></span>
                            </div>

                            <div class="col-md-12">
                                <label asp-for="Address" class="form-label">Venue / Delivery Address</label>
                                <input asp-for="Address" type="text" class="form-control" placeholder="e.g., Campus Center, Room 201" />
                                <span asp-validation-for="Address" class="text-danger"></span>
                            </div>

                            <div class="col-md-12">
                                <label class="form-label">Dietary Requirements</label>
                                <div class="d-flex flex-wrap gap-3">
                                    @{
                                        var opts = new[] { "Vegetarian", "Vegan", "Gluten-Free", "Halal", "Dairy-Free" };
                                        foreach (var opt in opts)
                                        {
                                            var id = "diet_" + opt.Replace(" ", "");
                                            var isChecked = Model.Dietary?.Contains(opt) ?? false;
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" name="Dietary" value="@opt" id="@id" @(isChecked ? "checked" : null) />
                                            <label class="form-check-label" for="@id">@opt</label>
                                        </div>
                                        }
                                    }
                                </div>
                                <div class="form-text">You can specify details in Notes below.</div>
                            </div>

                            <div class="col-md-6">
                                <label asp-for="BudgetPerPerson" class="form-label">Budget per Person</label>
                                <div class="input-group">
                                    <span class="input-group-text">NZ$</span>
                                    <input asp-for="BudgetPerPerson" type="number" step="0.5" min="0" class="form-control" placeholder="e.g., 12.5">
                                </div>
                                <span asp-validation-for="BudgetPerPerson" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label asp-for="MenuStyle" class="form-label">Preferred Menu Style</label>
                                <select asp-for="MenuStyle" class="form-select">
                                    <option value="">Select...</option>
                                    <option value="CoffeePastries">Coffee &amp; Pastries</option>
                                    <option value="SandwichSalad">Sandwich &amp; Salad</option>
                                    <option value="HotDishes">Hot Dishes</option>
                                    <option value="MixedCustom">Mixed / Custom</option>
                                </select>
                                <span asp-validation-for="MenuStyle" class="text-danger"></span>
                            </div>
                        </div>

                        <hr class="my-4" />

                        <h5 class="mb-3">Notes</h5>
                        <div class="mb-3">
                            <label asp-for="Notes" class="form-label"></label>
                            <textarea asp-for="Notes" class="form-control" rows="4" placeholder="e.g., Tableware required, delivery window, specific allergens..."></textarea>
                            <span asp-validation-for="Notes" class="text-danger"></span>
                        </div>

                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-primary">Submit Application</button>
                            <a asp-controller="Home" asp-action="Index" class="btn btn-outline-secondary">Cancel</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Right side: Application instructions -->
        <div class="col-12 col-lg-4">
            <div class="card shadow-sm mb-3">
                <div class="card-body">
                    <h6 class="mb-2">Tips</h6>
                    <ul class="mb-0">
                        <li>Recommend submitting <strong>48 hours</strong> in advance.</li>
                        <li>If you have special dietary requirements or venue restrictions, please note in the remarks.</li>
                        <li>Prices will be determined based on menu selection and service format.</li>
                    </ul>
                </div>
            </div>

            <div class="card shadow-sm">
                <div class="card-body">
                    <h6 class="mb-2">Need help?</h6>
                    <p class="mb-1">Email: <a href="mailto:catering@campuscafe.com">catering@campuscafe.com</a></p>
                    <p class="mb-0">Phone: <span class="text-nowrap">+64 9 000 0000</span></p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <style>
        /* Set date input placeholder text to 2001/01/01 */
        input[type="date"]::-webkit-datetime-edit-text {
            color: #6c757d;
        }
        input[type="date"]::-webkit-datetime-edit-month-field {
            color: #6c757d;
        }
        input[type="date"]::-webkit-datetime-edit-day-field {
            color: #6c757d;
        }
        input[type="date"]::-webkit-datetime-edit-year-field {
            color: #6c757d;
        }
        input[type="date"]:focus::-webkit-datetime-edit-text,
        input[type="date"]:focus::-webkit-datetime-edit-month-field,
        input[type="date"]:focus::-webkit-datetime-edit-day-field,
        input[type="date"]:focus::-webkit-datetime-edit-year-field {
            color: #495057;
        }
        input[type="date"]:not(:placeholder-shown)::-webkit-datetime-edit-text,
        input[type="date"]:not(:placeholder-shown)::-webkit-datetime-edit-month-field,
        input[type="date"]:not(:placeholder-shown)::-webkit-datetime-edit-day-field,
        input[type="date"]:not(:placeholder-shown)::-webkit-datetime-edit-year-field {
            color: #495057;
        }
    </style>
    <script>
        // Set date input to use English locale
        document.addEventListener('DOMContentLoaded', function() {
            const dateInput = document.querySelector('input[type="date"]');
            if (dateInput) {
                dateInput.setAttribute('lang', 'en-US');
                // Force English locale for date picker
                if (dateInput.showPicker) {
                    const originalShowPicker = dateInput.showPicker;
                    dateInput.showPicker = function() {
                        document.documentElement.lang = 'en';
                        return originalShowPicker.call(this);
                    };
                }
            }
        });
       
        (function () {
            const range = document.getElementById('peopleRange');
            const number = document.getElementById('NumberOfPeople');
            if (!range || !number) return;

            const sync = (src, dest) => {
                dest.value = src.value;
                dest.dispatchEvent(new Event('input', { bubbles: true }));
            };

            range.addEventListener('input', () => sync(range, number));
            number.addEventListener('input', () => {
                const v = Math.max(1, Math.min(500, parseInt(number.value || '1', 10)));
                number.value = v;
                range.value = v;
            });
        })();
    </script>
}
